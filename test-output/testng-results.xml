<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="28770" started-at="2019-03-04T15:46:01Z" finished-at="2019-03-04T15:46:29Z">
    <groups>
    </groups>
    <test name="RegistrationTest" duration-ms="28770" started-at="2019-03-04T15:46:01Z" finished-at="2019-03-04T15:46:29Z">
      <class name="web.Tests.RegistrationTest">
        <test-method status="PASS" signature="setExtent()[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="setExtent" is-config="true" duration-ms="331" started-at="2019-03-04T19:46:01Z" finished-at="2019-03-04T19:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="setUp" is-config="true" duration-ms="3585" started-at="2019-03-04T19:46:01Z" finished-at="2019-03-04T19:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="invalidRegistration()[pri:1, instance:web.Tests.RegistrationTest@26653222]" name="invalidRegistration" duration-ms="17598" started-at="2019-03-04T19:46:04Z" finished-at="2019-03-04T19:46:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[SignUp Success expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: SignUp Success expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at web.Tests.RegistrationTest.invalidRegistration(RegistrationTest.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidRegistration -->
        <test-method status="PASS" signature="endTest(org.testng.ITestResult)[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="endTest" is-config="true" duration-ms="256" started-at="2019-03-04T19:46:22Z" finished-at="2019-03-04T19:46:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidRegistration status=FAILURE method=RegistrationTest.invalidRegistration()[pri:1, instance:web.Tests.RegistrationTest@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="registerUser()[pri:2, instance:web.Tests.RegistrationTest@26653222]" name="registerUser" duration-ms="6489" started-at="2019-03-04T19:46:22Z" finished-at="2019-03-04T19:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method status="PASS" signature="endTest(org.testng.ITestResult)[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="endTest" is-config="true" duration-ms="0" started-at="2019-03-04T19:46:29Z" finished-at="2019-03-04T19:46:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerUser status=SUCCESS method=RegistrationTest.registerUser()[pri:2, instance:web.Tests.RegistrationTest@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="tearDown" is-config="true" duration-ms="105" started-at="2019-03-04T19:46:29Z" finished-at="2019-03-04T19:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:web.Tests.RegistrationTest@26653222]" name="endReport" is-config="true" duration-ms="393" started-at="2019-03-04T19:46:29Z" finished-at="2019-03-04T19:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- web.Tests.RegistrationTest -->
    </test> <!-- RegistrationTest -->
  </suite> <!-- Suite -->
</testng-results>
